#!/usr/bin/env python

import os, sys
import stat
import time, datetime
import pandas as pd
import h5py
import numpy as np
import collections
import datetime

import click
import Dutils.Dclick as Dclick

from Dtest.regtest.queryHDF5 import findLastPassed, testStats

@Dclick.cli.command()
@click.pass_context
@click.option("--test-dir",type=str, default=".",show_default=True,help="The DTest directory that is not passing, with the path format <module>/<test name>")
@click.option("--hdf5-filename", type=str, default="/home/dlab3/repo/PKGBUILDS/ROAMSDshellPkg/regtest.h5", show_default=True, help="Name of HDF5 file that stores regtest data.")
def options(ctx, **kwargs):
    Dclick.add_options("options", Dclick.cli.commands["options"], kwargs)


cfgobj, ctxobj = Dclick.cli(standalone_mode=False)

test_dir = cfgobj['options']['test_dir']
hdf5_filename = cfgobj['options']['hdf5_filename']

# if the test_dir is the current directory, we need to remove the YAM_ROOT from the path
if test_dir == ".":
    test_dir = os.getcwd().replace(os.environ['YAM_ROOT'] + '/src/', '')

module_name = test_dir.split('/')[0]
test_name = test_dir.replace(module_name+'/', '')

line_str = '\n' + '-'*100 + '\n'

print(f"\nMODULE NAME: {module_name}")
print(f"TEST NAME: {test_name}")

# get the last 10 runs of the test - helpful for knowing if this test fluctuates
try:
    test_infos = testStats(hdf5_filename, module_name, test_name, 10, date=datetime.datetime.now())
except Exception as e:
    print("\nError occurred:")
    print(f"\t{e}")
    sys.exit(1)

# print out last 10 runs 
print(line_str)
print("Last 10 runs:")
print("\n\tSTART TIME\t\t\tPASSED\t\tRELEASE")
print("\t----------\t\t\t------\t\t-------")
for test_info in test_infos:
    print(f"\t{test_info.start_time}\t{test_info.passed}\t\t{test_info.module_release}")

print(line_str)
print("Searching through HDF5 file...\n")

# find the last time this test passed
try:
    (failed_test_info, passed_test_info) = findLastPassed(hdf5_filename, module_name, test_name, date=datetime.datetime.now())
except Exception as e:
    print("\nError occurred:")
    print(f"\t{e}")
    sys.exit(1)

# print out the info
print("Done!")
print(line_str)
print("Failed test:\n")
print(failed_test_info)
print(line_str)
print("Successful test:\n")
print(passed_test_info)
print(line_str)

