# -*- coding: utf-8 -*-
#
# Dtest documentation build configuration file, created by
# sphinx-quickstart on Wed Feb 16 17:34:17 2011.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
from __future__ import division

from __future__ import absolute_import
from __future__ import print_function

import sys
import os

YAM_ROOT = os.getenv("YAM_ROOT")
YAM_TARGET = os.getenv("YAM_TARGET")
if not YAM_TARGET:
    print("\nERROR: Must run this command with Drun!\n", file=sys.stderr)
    sys.exit()

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('.'))

sys.path.append(os.path.abspath(".."))
sys.path.append(os.path.abspath(os.path.join(YAM_ROOT, "lib", YAM_TARGET, "PYTHON")))
sys.path.append(os.path.abspath(os.path.join(YAM_ROOT, "lib/PYTHON")))
sys.path.append(os.path.abspath(os.path.join(YAM_ROOT, "lib", YAM_TARGET, "PYTHON")))
sys.path.append(os.path.abspath(os.path.join(YAM_ROOT, "doc/SphinxDocs")))


# -- autodoc configuration -----------------------------------------------

autodoc_default_flags = [
    "members",
    "inherited-members",
    "show-inheritance",
    "no-undoc-members",
]


# -- General configuration -----------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

TEMPLATES_DIR = os.path.abspath(os.path.join(YAM_ROOT, "etc/Dutils/sphinx_template"))

# Handle variant sources for sphinx extensions
doxylink = "sphinx_extensions.doxylink"
if os.path.exists(os.path.abspath(os.path.join(YAM_ROOT, "lib/PYTHON/Dutils"))):
    doxylink = "Dutils." + doxylink

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.coverage",
    "sphinx.ext.imgmath",
    "sphinx.ext.ifconfig",
    "sphinx.ext.graphviz",
    "sphinx.ext.viewcode",
    # 'sphinxcontrib.autorun',
    "matplotlib.sphinxext.only_directives",
    "matplotlib.sphinxext.plot_directive",
    # 'numpydoc',
    doxylink,
    "sphinx.ext.todo",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = [os.path.join(TEMPLATES_DIR, "_templates")]

# The suffix of source filenames.
source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "Dtest"
copyright = "2017, California Institute of Technology"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = "1.0"
# The full version, including alpha/beta/rc tags.
release = "1.0"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["external"]

# The reST default role (used for this markup: `text`) to use for all documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

todo_include_todos = True

# -- Options for doxylink --------------------------------------------------

# Set up doxylink for the tag file and doxgen files for this module

DOCDIR_ROOT = os.path.abspath("..")

MOD_NAME = "Dtest".lower().replace("+", "p")

doxylink = {}
doxylink[MOD_NAME] = (
    os.path.join(DOCDIR_ROOT, "doxy-Dtest.tag"),
    os.path.join(DOCDIR_ROOT, "build/html/doxygen/html"),
)


# Set up doxylink for all other modules

# This is set in SiteDefs
# DOXFILES_ROOT = os.getenv('BUILT_DOXYGEN_DIR')

# DOX_MODULES = os.getenv('BUILT_DOXYGEN_MODULES').split()

# DOX_MODULES = [m for m in DOX_MODULES if m != 'Dtest']

DOX_MODULES = []

for module in DOX_MODULES:
    tag = module.lower().replace("+", "p")

    sys.path.append(os.path.abspath(os.path.join(YAM_ROOT, "doc/SphinxDocs", module, "test")))

    doxylink[tag] = (
        os.path.join(DOXFILES_ROOT, "%s/doxy-%s.tag" % (module, module)),
        os.path.join(DOXFILES_ROOT, "%s/html/" % module),
    )


# -- Options for HTML output ---------------------------------------------
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "sphinxdoc"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {
#    "rightsidebar" : "True",
#    }

html_show_sphinx = False


# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [os.path.join(TEMPLATES_DIR, "_static")]

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = "%b %d, %Y at %I:%M %P"

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "DtestDoc"


# -- Options for LaTeX output --------------------------------------------

# The paper size ('letter' or 'a4').
# latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
# latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
    (
        "index",
        "Dtest.tex",
        "Dtest Documentation",
        "Jonathan Cameron",
        "manual",
    )
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Additional stuff for the LaTeX preamble.
# latex_preamble = ''

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output --------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", "Dtest", "Dtest Documentation", ["Jonathan Cameron"], 1)]

todo_include_todos = True


# -- Options for Epub output ---------------------------------------------

# Bibliographic Dublin Core info.
epub_title = "Dtest"
epub_author = "Dartslab"
epub_publisher = "Dartslab"
epub_copyright = "2011, California Institute of Technology"

# The language of the text. It defaults to the language option
# or en if the language is not set.
# epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
# epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
# epub_identifier = ''

# A unique identification for the text.
# epub_uid = ''

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
# epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
# epub_post_files = []

# A list of files that should not be packed into the epub file.
# epub_exclude_files = []

# The depth of the table of contents in toc.ncx.
# epub_tocdepth = 3

# Allow duplicate toc entries.
# epub_tocdup = True


# -- Options for autorun  --------------------------------------------------
autorun_languages = {}
autorun_languages["gnuplot"] = "gnuplot"
# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {"http://docs.python.org/": None}
